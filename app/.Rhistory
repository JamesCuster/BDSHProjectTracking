textInput(
"workTime",
"Time spend in hours (as number with decimals"
),
textInput(
"workDescription",
"Brief description of work completed"
)
)
cat(
textInput(
"projectID",
"Select the project to add time to"
),
textInput(
"worker",
"UTEID"
),
dateInput(
"dateOfWork",
"Date that this work was completed"
),
dateInput(
"dateOfEntry",
"Date work was logged"
),
textInput(
"workTime",
"Time spend in hours (as number with decimals"
),
textInput(
"workDescription",
"Brief description of work completed"
)
)
textInput(
"projectID",
"Select the project to add time to"
)
x <- textInput(
"projectID",
"Select the project to add time to"
)
x
View(x)
cat(
print(
textInput(
"projectID",
"Select the project to add time to"
),
textInput(
"worker",
"UTEID"
),
dateInput(
"dateOfWork",
"Date that this work was completed"
),
dateInput(
"dateOfEntry",
"Date work was logged"
),
textInput(
"workTime",
"Time spend in hours (as number with decimals"
),
textInput(
"workDescription",
"Brief description of work completed"
)
))
print(
textInput(
"projectID",
"Select the project to add time to"
),
textInput(
"worker",
"UTEID"
),
dateInput(
"dateOfWork",
"Date that this work was completed"
),
dateInput(
"dateOfEntry",
"Date work was logged"
),
textInput(
"workTime",
"Time spend in hours (as number with decimals"
),
textInput(
"workDescription",
"Brief description of work completed"
)
)
paste0(
textInput(
"projectID",
"Select the project to add time to"
),
textInput(
"worker",
"UTEID"
),
dateInput(
"dateOfWork",
"Date that this work was completed"
),
dateInput(
"dateOfEntry",
"Date work was logged"
),
textInput(
"workTime",
"Time spend in hours (as number with decimals"
),
textInput(
"workDescription",
"Brief description of work completed"
)
)
cat(
paste0(
textInput(
"projectID",
"Select the project to add time to"
),
textInput(
"worker",
"UTEID"
),
dateInput(
"dateOfWork",
"Date that this work was completed"
),
dateInput(
"dateOfEntry",
"Date work was logged"
),
textInput(
"workTime",
"Time spend in hours (as number with decimals"
),
textInput(
"workDescription",
"Brief description of work completed"
)
)
)
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
cat(
paste0(
textInput(
"projectID",
"Select the project to add time to"
),
textInput(
"worker",
"UTEID"
),
dateInput(
"dateOfWork",
"Date that this work was completed"
),
dateInput(
"dateOfEntry",
"Date work was logged"
),
textInput(
"workTime",
"Time spend in hours (as number with decimals"
),
textInput(
"workDescription",
"Brief description of work completed"
)
)
)
x <- cat(
paste0(
textInput(
"projectID",
"Select the project to add time to"
),
textInput(
"worker",
"UTEID"
),
dateInput(
"dateOfWork",
"Date that this work was completed"
),
dateInput(
"dateOfEntry",
"Date work was logged"
),
textInput(
"workTime",
"Time spend in hours (as number with decimals"
),
textInput(
"workDescription",
"Brief description of work completed"
)
)
)
x
x <- cat(
paste0(
textInput(
"projectID",
"Select the project to add time to"
),
textInput(
"worker",
"UTEID"
),
dateInput(
"dateOfWork",
"Date that this work was completed"
),
dateInput(
"dateOfEntry",
"Date work was logged"
),
textInput(
"workTime",
"Time spend in hours (as number with decimals"
),
textInput(
"workDescription",
"Brief description of work completed"
)
)
)
x
cat(
paste0(
textInput(
"projectID",
"Select the project to add time to"
),
textInput(
"worker",
"UTEID"
),
dateInput(
"dateOfWork",
"Date that this work was completed"
),
dateInput(
"dateOfEntry",
"Date work was logged"
),
textInput(
"workTime",
"Time spend in hours (as number with decimals"
),
textInput(
"workDescription",
"Brief description of work completed"
)
)
)
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
# connect to DB here
library(shiny)
# library(dplyr)
# library(DBI)
library(RSQLite)
BDSHProjects <- dbconnect(SQLite(), "C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects.sqlite")
BDSHProjects <- dbConnect(SQLite(), "C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects.sqlite")
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
nycflights13::flights
library(dplyr)
nycflights13::flights
flights
install.packages("nycflights13")
nycflights13::flights
tbl(BDSHProjects, "projects")
pjs <- tbl(BDSHProjects, "projects")
show_query(pjs)
pjs <- tbl(BDSHProjects, "projects") %>% collect()
View(pjs)
source('C:/Users/jmc6538/Desktop/BDSHProjectTracking/uiPages/addProject.R', echo=TRUE)
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
source('C:/Users/jmc6538/Desktop/BDSHProjectTracking/uiPages/addProject.R', echo=TRUE)
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
input
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
str(cat(inputs))
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
cat(str(input))
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp()
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
View(output)
View(input)
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
force(input)
View(input)
View(input)
names(pjs)
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp()
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
source('C:/Users/jmc6538/Desktop/BDSHProjectTracking/uiPages/addProject.R', echo=TRUE)
source('C:/Users/jmc6538/Desktop/BDSHProjectTracking/uiPages/addProject.R', echo=TRUE)
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
source('C:/Users/jmc6538/Desktop/BDSHProjectTracking/uiPages/addProject.R', echo=TRUE)
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
source('C:/Users/jmc6538/Desktop/BDSHProjectTracking/uiPages/addProject.R', echo=TRUE)
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp()
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
grepl("date", projectDueDate, ignore.case = TRUE)
grepl("date", "projectDueDate", ignore.case = TRUE)
grepl("date", "projectDue", ignore.case = TRUE)
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
source('C:/Users/jmc6538/Desktop/BDSHProjectTracking/uiPages/addTime.R', echo=TRUE)
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
source('C:/Users/jmc6538/Desktop/BDSHProjectTracking/uiPages/addProject.R', echo=TRUE)
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
# Define UI for application that draws a histogram
shinyUI(
fluidPage(
tabsetPanel(
# This is a script which will reset the form inputs after it has been
# submitted
# Add tab panels (add project/time, view (project/time) -------------------
# Add Project Panel
source(
"C:/Users/jmc6538/Desktop/BDSHProjectTracking/uiPages/addProject.r",
local = TRUE)$value,
source("C:/Users/jmc6538/Desktop/BDSHProjectTracking/uiPages/addTime.r", local = TRUE)$value,
source("C:/Users/jmc6538/Desktop/BDSHProjectTracking/uiPages/ViewTime.r", local = TRUE)$value,
source("C:/Users/jmc6538/Desktop/BDSHProjectTracking/uiPages/ViewTime.r", local = TRUE)$value
)
)
)
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
shiny::runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
runApp('C:/Users/jmc6538/Desktop/BDSHProjectTracking/BDSHProjects')
shiny::runApp()
shiny::runApp()
runApp()
View(projectFormData)
dbplyr::db_copy_to(BDSHProjects, projects, projectFormData)
dbplyr::db_copy_to(BDSHProjects, "projects", projectFormData)
dbplyr::db_copy_to(BDSHProjects, "projects", projectFormData, append = TRUE)
dbplyr::db_copy_to(BDSHProjects, projects, projectFormData, append = TRUE)
dbWriteTable(BDSHProjects, "projects", projectFormData, append = TRUE)
projectFormData$projectID <- NULL
dbWriteTable(BDSHProjects, "projects", projectFormData, append = TRUE)
projectFormData[-1]
dbWriteTable(BDSHProjects, "projects", projectFormData[-1], append = TRUE)
projectFormData
View(projectFormData)
projectFormData$projectID <- NULL
test <- cbind(projectID = c(NULL, NULL, NULL), projectFormData)
test <- cbind(c(NULL, NULL, NULL), projectFormData)
projectFormData
test <- cbind(t(c(NULL, NULL, NULL)), projectFormData)
test <- data.frame(projectID = c(NULL, NULL, NULL))
test <- cbind(projectID = c(NA, NA, NA), projectFormData)
dbWriteTable(BDSHProjects, "projects", test, append = TRUE)
dbExecute(BDSHProjects,
"insert into projects values(null, 'psa", 'James', 'Paul')
dbExecute(BDSHProjects,
"insert into projects values(null, 'psa', 'James', 'Paul');")
dbExecute(BDSHProjects,
"insert into projects values(null, 'psa', 'James', 'Paul', null, null, null, null, null, null, null, null, null, null, null, null, null);")
dbExecute(BDSHProjects,
"insert into projects values(null, 'psa', 'James', 'Paul', null, null, null, null, null, null, null, null, null, null, null, null, null);")
RODBC::sqlsave
install.packages("RODBC")
dbExecute(BDSHProjects,
"insert into projects values(, 'psa', 'James', 'Paul', null, null, null, null, null, null, null, null, null, null, null, null, null);")
dbExecute(BDSHProjects,
"insert into projects values('psa', 'James', 'Paul', null, null, null, null, null, null, null, null, null, null, null, null, null);")
dbExecute(BDSHProjects,
"insert into projects values(null, 'psa', 'James', 'Paul', null, null, null, null, null, null, null, null, null, null, null, null, null);")
dbWriteTable(BDSHProjects, "projects", test, append = TRUE)
shiny::runApp()
runApp()
dbWriteTable(BDSHProjects, "projects", projectFormData, append = TRUE)
runApp()
runApp()
source('C:/Users/jmc6538/Desktop/BDSHProjectTracking/uiPages/addProject.R', echo=TRUE)
runApp()
source('C:/Users/jmc6538/Desktop/BDSHProjectTracking/uiPages/addProject.R', echo=TRUE)
runApp()
runApp()
runApp()
dbbdshPeople <- tbl(BDSHProjects, "bdshPeople") %>% collect()
source('C:/Users/jmc6538/Desktop/BDSHProjectTracking/uiPages/addProject.R', echo=TRUE)
runApp()
runApp()
dbbdshPeople[dbbdshPeople$name == "James Custer", "uteid"]
runApp()
View(projectFormData)
runApp()
dbResearchers <- tbl(BDSHProjects, "bdshPeople") %>% collect()
dbResearchers
dbResearchers <- tbl(BDSHProjects, "researchers") %>% collect()
dbResearchers
source('C:/Users/jmc6538/Desktop/BDSHProjectTracking/uiPages/addProject.R', echo=TRUE)
runApp()
runApp()
runApp()
runApp()
# Function that allows for two text inputs to be in a row
textInputRow <- function(inputId, label, value = "") {
div(style="display:inline-block",
tags$label(label, `for` = inputId),
tags$input(id = inputId, type = "text", value = value,class="input-small"))
}
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
